[package]
name = "acs-example"
version = "0.1.0"
edition = "2021"
description = "Agent Component System (ACS) Example - Hybrid Symbolic-Neural AI Architecture"
authors = ["CCC Framework <research@ccc.local>"]

[dependencies]
# Core Runtime Foundation (from research recommendations)
tokio = { version = "1.35.0", features = ["full"] }
redb = "2.0"
qdrant-client = "1.8.0"
candle = "0.4.0"

# Behavioral Intelligence Implementation
serde = { version = "1.0", features = ["derive"] }
bincode = "1.3"
uuid = { version = "1.6", features = ["v4"] }
thiserror = "1.0"
tracing = "0.1"
tracing-subscriber = "0.3"

# Rule Engine and Decision Making
# Note: GoRules ZEN would be added here for production
serde_json = "1.0"
async-trait = "0.1"

# Cloud Integration (Optional)
reqwest = { version = "0.11", features = ["json"], optional = true }
openai-api-rs = { version = "5.0", optional = true }

# Development Dependencies
[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
tempfile = "3.8"
env_logger = "0.10"

[features]
default = ["local-only"]
local-only = []
cloud-integration = ["reqwest", "openai-api-rs"]

[[bin]]
name = "systematic-researcher"
path = "examples/systematic_researcher.rs"

[[bench]]
name = "agent_performance"
harness = false